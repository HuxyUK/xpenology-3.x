
static const EC_CURVE_DATA SEC192R1 = {
	24,
	{0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	//(next power 2)/2=2^191
	{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},	// modulus m (p), Prime-modulus:(p-or-m)
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01},	// m' ,modular inverse of m (mod R)
	{0x18,0x8D,0xA8,0x0E,0xB0,0x30,0x90,0xF6,0x7C,0xBF,0x20,0xEB,0x43,0xA1,0x88,0x00,0xF4,0xFF,0x0A,0xFD,0x82,0xFF,0x10,0x12},	// x
	{0x07,0x19,0x2B,0x95,0xFF,0xC8,0xDA,0x78,0x63,0x10,0x11,0xED,0x6B,0x24,0xCD,0xD5,0x73,0xF9,0x77,0xA1,0x1E,0x79,0x48,0x11},	// y
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01},	// z
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01},	//R^2 mod m
	{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC},	// A
	{0x64,0x21,0x05,0x19,0xE5,0x9C,0x80,0xE7,0x0F,0xA7,0xE9,0xAB,0x72,0x24,0x30,0x49,0xFE,0xB8,0xDE,0xEC,0xC1,0x46,0xB9,0xB1},	// B
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x99,0xDE,0xF8,0x36,0x14,0x6B,0xC9,0xB1,0xB4,0xD2,0x28,0x31},	//order 32bytes
	"SECP_192R1",
   { 0x28, 0xBE, 0x56, 0x77, 0xEA, 0x05, 0x81, 0xA2, 0x46, 0x96, 0xEA, 0x5B, 0xBB, 0x3A, 0x6B, 0xEE, 0xCE, 0x66, 0xBA, 0xCC, 0xDE, 0xB3, 0x59, 0x61, },
   { 0x8F, 0x63, 0xC8, 0x41, 0xCC, 0x4C, 0xC3, 0xF7, 0x9E, 0x9E, 0x1A, 0x9C, 0xB7, 0x9D, 0x94, 0x8E, 0x88, 0x26, 0x72, 0x07, 0x0D, 0xDB, 0xCF, 0x2F, },
   { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x99, 0xDE, 0xF8, 0x36, 0x14, 0x6B, 0xC9, 0xB1, 0xB4, 0xD2, 0x28, 0x31, },
};

static const EC_CURVE_DATA SEC192K1 = {
        24,
        {0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},      //(next power 2)/2=2^191
        {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xEE,0x37},      // modulus m (p), Prime-modulus:(p-or-m)
        {0x3E,0x13,0x6A,0x4E,0xF8,0xB2,0x49,0x7A,0xE5,0x23,0x25,0x4A,0xC1,0xED,0xC1,0x6C,0xF2,0x7A,0xE5,0x5B,0x74,0x46,0xD8,0x79},      // m' ,modular inverse of m (mod R)
        {0xDB,0x4F,0xF1,0x0E,0xC0,0x57,0xE9,0xAE,0x26,0xB0,0x7D,0x02,0x80,0xB7,0xF4,0x34,0x1D,0xA5,0xD1,0xB1,0xEA,0xE0,0x6C,0x7D},      // x
        {0x9B,0x2F,0x2F,0x6D,0x9C,0x56,0x28,0xA7,0x84,0x41,0x63,0xD0,0x15,0xBE,0x86,0x34,0x40,0x82,0xAA,0x88,0xD9,0x5E,0x2F,0x9D},      // y
        {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01},      // z
        {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x23,0x92,0x01,0x3C,0x4F,0xD1},      //R^2 mod m
        {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},      // A
        {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03},      // B
        {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x26,0xF2,0xFC,0x17,0x0F,0x69,0x46,0x6A,0x74,0xDE,0xFD,0x8D},      //order 32bytes
        "SECP_192K1"
};

